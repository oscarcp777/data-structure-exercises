import BinaryTree from './binary-search-tree'

describe('define test for binary tree', () => {

  it('should be insert 5 nodes', () => {
    let tree = new BinaryTree()
    tree.add(6)
    expect(tree.size()).toBe(1)
    tree.add(36)
    tree.add(46)
    tree.add(18)
    tree.add(1)
    expect(tree.size()).toBe(5)
    expect(tree.toArray()).toEqual([1,6,18,36,46])
  })

  it('should be insert 10 nodes', () => {
    let tree = new BinaryTree()
    tree.add(6)
    expect(tree.size()).toBe(1)
    tree.add(36)
    tree.add(46)
    tree.add(18)
    tree.add(100)
    tree.add(12)
    tree.add(31)
    tree.add(8)
    tree.add(1000)
    tree.add(1)
    expect(tree.size()).toBe(10)
    expect(tree.toArray()).toEqual([1,6,8,12,18,31,36,46,100,1000])
  })
  it('should be the tree contains elements',() => {
    let tree = new BinaryTree()
    tree.add(6)
    tree.add(18)
    tree.add(100)
    tree.add(12)
    tree.add(31)
    tree.add(8)
    expect(tree.contains(6)).toBe(true)
  })
  it('should be the tree remove elements',() => {
    let tree = new BinaryTree()
    tree.add(6)
    tree.add(18)
    tree.add(100)
    tree.add(12)
    tree.add(31)
    tree.add(8)
    expect(tree.size()).toBe(6)
    tree.remove(8)
    tree.remove(100)
    expect(tree.size()).toBe(4)
    expect(tree.toArray()).toEqual([6,12,18,31])
  })
})
